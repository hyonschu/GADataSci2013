> library(ggplot2) # loads ggplot library
> x <- read.csv("pace.txt", h=T) # set x as data from pace.txt
> head(x) # verify contents of x
        city    speed  pop
1    Brno_CZ 0.341948 4.81
2  Prague_CZ 1.092759 5.88
3   Corte_FR 0.005491 3.31
4  Bastia_FR 0.493750 4.90
5  Munich_GE 1.340000 5.62
6 Psychro_GR 0.000365 2.76
> str(x) # verify contents of x
'data.frame':	15 obs. of  3 variables:
 $ city : Factor w/ 15 levels "Athens_GR","Bastia_FR",..: 3 13 5 2 10 14 8 7 1 15 ...
 $ speed: num  0.34195 1.09276 0.00549 0.49375 1.34 ...
 $ pop  : num  4.81 5.88 3.31 4.9 5.62 2.76 2.27 3.85 5.21 3.7 ...
> ggplot(x, aes(y=speed, x=pop)) + geom_point() # plot data 'x' using speed as dependent variable (y) and x as independent as points
# there is also a very obvious outlier (Brooklyn)
> linear.fit <- lm(pop ~ speed, data=x) # linear fit model with population as predictor
> summary(linear.fit) # summary statistics on model

Call:
lm(formula = pop ~ speed, data = x)

Residuals:
     Min       1Q   Median       3Q      Max 
-1.42046 -0.51769 -0.00158  0.65962  1.13502 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)   3.6880     0.2778  13.275 6.17e-09 ***
speed         0.9672     0.3094   3.126  0.00803 **  # decent t-value fit, but very low R-squared
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 0.8205 on 13 degrees of freedom
Multiple R-squared:  0.4292,	Adjusted R-squared:  0.3853 
F-statistic: 9.774 on 1 and 13 DF,  p-value: 0.008029

> log.fit <- lm(log(speed) ~ log(pop), data=x) # perhaps a logarithmic fit is better?
# due to the outlier Brooklyn. log may smooth the curves out
> summary(log.fit)

Call:
lm(formula = log(speed) ~ log(pop), data = x)

Residuals:
    Min      1Q  Median      3Q     Max 
-2.2927 -0.7014 -0.1421  0.8201  2.4433 

Coefficients:
            Estimate Std. Error t value Pr(>|t|)    
(Intercept)  -14.571      1.812  -8.041 2.11e-06 ***
log(pop)       8.814      1.259   6.999 9.35e-06 *** # t-value gets larget with a 
---
Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1

Residual standard error: 1.27 on 13 degrees of freedom
Multiple R-squared:  0.7903,	Adjusted R-squared:  0.7742 
F-statistic: 48.99 on 1 and 13 DF,  p-value: 9.35e-06

> qqnorm(resid(log.fit)) # qqnorm does show a smoothing out. 
# however, the R-squared is still a bit too - probably needs more evidence to draw a conclusion